/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { RoundManager, RoundManagerInterface } from "../RoundManager";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "roundId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "AutomaticDistributionFailed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "roundId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "enum RoundManager.Team",
        name: "team",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "BetPlaced",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "roundId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "RewardsClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "roundId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "enum RoundManager.Team",
        name: "winningTeam",
        type: "uint8",
      },
    ],
    name: "RoundCompleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "roundId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "enum RoundManager.DistributionType",
        name: "distributionType",
        type: "uint8",
      },
    ],
    name: "RoundCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "authorizedProcessors",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "roundId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "calculateReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "roundId",
        type: "uint256",
      },
    ],
    name: "claimRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "roundId",
        type: "uint256",
      },
      {
        internalType: "enum RoundManager.Team",
        name: "winningTeam",
        type: "uint8",
      },
    ],
    name: "completeRound",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "roundId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
      {
        internalType: "enum RoundManager.DistributionType",
        name: "distributionType",
        type: "uint8",
      },
    ],
    name: "createRound",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "roundId",
        type: "uint256",
      },
      {
        internalType: "enum RoundManager.Team",
        name: "team",
        type: "uint8",
      },
    ],
    name: "placeBet",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "rounds",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "enum RoundManager.RoundStatus",
        name: "status",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalStaked",
        type: "uint256",
      },
      {
        internalType: "enum RoundManager.Team",
        name: "winningTeam",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "platformFee",
        type: "uint256",
      },
      {
        internalType: "enum RoundManager.DistributionType",
        name: "distributionType",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "roundId",
        type: "uint256",
      },
    ],
    name: "withdrawPlatformFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060018060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506120e9806100776000396000f3fe60806040526004361061007b5760003560e01c80636aa214161161004e5780636aa2141614610117578063781c065c146101405780638c65c81f1461017d578063a18f07a0146101c15761007b565b806303edf914146100805780630962ef791461009c578063121cd224146100c55780634dd72fdd146100ee575b600080fd5b61009a600480360381019061009591906114ba565b6101fe565b005b3480156100a857600080fd5b506100c360048036038101906100be91906114fa565b61066c565b005b3480156100d157600080fd5b506100ec60048036038101906100e791906114ba565b6109bb565b005b3480156100fa57600080fd5b506101156004803603810190610110919061154c565b610c19565b005b34801561012357600080fd5b5061013e600480360381019061013991906114fa565b610dd4565b005b34801561014c57600080fd5b50610167600480360381019061016291906115fd565b610fc4565b6040516101749190611645565b60405180910390f35b34801561018957600080fd5b506101a4600480360381019061019f91906114fa565b610fe4565b6040516101b8989796959493929190611776565b60405180910390f35b3480156101cd57600080fd5b506101e860048036038101906101e391906117f4565b611053565b6040516101f59190611834565b60405180910390f35b600060028111156102125761021161166f565b5b60008084815260200190815260200160002060010160009054906101000a900460ff1660028111156102475761024661166f565b5b14610287576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027e906118ac565b60405180910390fd5b6000808381526020019081526020016000206003015442106102de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102d590611918565b60405180910390fd5b600060028111156102f2576102f161166f565b5b8160028111156103055761030461166f565b5b03610345576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161033c90611984565b60405180910390fd5b60003411610388576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161037f90611a16565b60405180910390fd5b600080600084815260200190815260200160002060060160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101540361045c57600080838152602001908152602001600020600701339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b60405180608001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200134815260200182600281111561049c5761049b61166f565b5b81526020016000151581525060008084815260200190815260200160002060060160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020160006101000a81548160ff021916908360028111156105765761057561166f565b5b021790555060608201518160020160016101000a81548160ff0219169083151502179055509050503460008084815260200190815260200160002060050160008360028111156105c9576105c861166f565b5b60028111156105db576105da61166f565b5b815260200190815260200160002060008282546105f89190611a65565b925050819055503460008084815260200190815260200160002060040160008282546106249190611a65565b925050819055507f4f1eed5e863a822b0f9eb960dfdab2cc5a99beec4b191f2a7a9c7e28e5a15524823383346040516106609493929190611aa8565b60405180910390a15050565b600080600083815260200190815260200160002090506002808111156106955761069461166f565b5b8160010160009054906101000a900460ff1660028111156106b9576106b861166f565b5b146106f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106f090611b39565b60405180910390fd5b60008160060160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506000816001015411610785576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077c90611ba5565b60405180910390fd5b8060020160019054906101000a900460ff16156107d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ce90611c11565b60405180910390fd5b8160080160009054906101000a900460ff1660028111156107fb576107fa61166f565b5b8160020160009054906101000a900460ff16600281111561081f5761081e61166f565b5b1461085f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085690611c7d565b60405180910390fd5b600061086b8433611053565b9050600081116108b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108a790611ce9565b60405180910390fd5b60018260020160016101000a81548160ff02191690831515021790555060003373ffffffffffffffffffffffffffffffffffffffff16826040516108f390611d3a565b60006040518083038185875af1925050503d8060008114610930576040519150601f19603f3d011682016040523d82523d6000602084013e610935565b606091505b5050905080610979576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097090611d9b565b60405180910390fd5b7f3300bdb359cfb956935bca32e9db727413eab1ca84341f2e36caea85bb7969688533846040516109ac93929190611dbb565b60405180910390a15050505050565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610a47576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a3e90611e3e565b60405180910390fd5b6000806000848152602001908152602001600020905060006002811115610a7157610a7061166f565b5b8160010160009054906101000a900460ff166002811115610a9557610a9461166f565b5b14610ad5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610acc906118ac565b60405180910390fd5b60006002811115610ae957610ae861166f565b5b826002811115610afc57610afb61166f565b5b03610b3c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b3390611eaa565b60405180910390fd5b60028160010160006101000a81548160ff02191690836002811115610b6457610b6361166f565b5b0217905550818160080160006101000a81548160ff02191690836002811115610b9057610b8f61166f565b5b02179055507fb8a5eda082a9bead12e2aad412cc2910ce57ba364f92a818c8185e9ca9185c4d8383604051610bc6929190611eca565b60405180910390a1600180811115610be157610be061166f565b5b81600a0160009054906101000a900460ff166001811115610c0557610c0461166f565b5b03610c1457610c13836111e4565b5b505050565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610ca5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c9c90611e3e565b60405180910390fd5b8260008085815260200190815260200160002060000181905550600080600085815260200190815260200160002060010160006101000a81548160ff02191690836002811115610cf857610cf761166f565b5b021790555042600080858152602001908152602001600020600201819055508142610d239190611a65565b60008085815260200190815260200160002060030181905550601e6000808581526020019081526020016000206009018190555080600080858152602001908152602001600020600a0160006101000a81548160ff02191690836001811115610d8f57610d8e61166f565b5b02179055507fea536f0586161945e657cbea6759c95c4cf1068feb8cf43f6823b2db846c835c834283604051610dc793929190611ef3565b60405180910390a1505050565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610e60576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e5790611e3e565b60405180910390fd5b60008060008381526020019081526020016000209050600280811115610e8957610e8861166f565b5b8160010160009054906101000a900460ff166002811115610ead57610eac61166f565b5b14610eed576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ee490611b39565b60405180910390fd5b60006103e882600901548360040154610f069190611f2a565b610f109190611f9b565b905060003373ffffffffffffffffffffffffffffffffffffffff1682604051610f3890611d3a565b60006040518083038185875af1925050503d8060008114610f75576040519150601f19603f3d011682016040523d82523d6000602084013e610f7a565b606091505b5050905080610fbe576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fb590611d9b565b60405180910390fd5b50505050565b60016020528060005260406000206000915054906101000a900460ff1681565b60006020528060005260406000206000915090508060000154908060010160009054906101000a900460ff16908060020154908060030154908060040154908060080160009054906101000a900460ff169080600901549080600a0160009054906101000a900460ff16905088565b600080600080858152602001908152602001600020905060008160060160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508160080160009054906101000a900460ff1660028111156110d3576110d261166f565b5b8160020160009054906101000a900460ff1660028111156110f7576110f661166f565b5b14611107576000925050506111de565b60008260050160008460080160009054906101000a900460ff1660028111156111335761113261166f565b5b60028111156111455761114461166f565b5b8152602001908152602001600020549050600081670de0b6b3a764000084600101546111719190611f2a565b61117b9190611f9b565b905060006103e8856009015486600401546111969190611f2a565b6111a09190611f9b565b905060008186600401546111b49190611fcc565b9050670de0b6b3a764000083826111cb9190611f2a565b6111d59190611f9b565b96505050505050505b92915050565b6000806000838152602001908152602001600020905060005b816007018054905081101561145557600082600701828154811061122457611223612000565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008360060160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508360080160009054906101000a900460ff1660028111156112ba576112b961166f565b5b8160020160009054906101000a900460ff1660028111156112de576112dd61166f565b5b1480156112fa57508060020160019054906101000a900460ff16155b1561144057600061130b8684611053565b9050600081111561143e5760018260020160016101000a81548160ff02191690831515021790555060008373ffffffffffffffffffffffffffffffffffffffff168260405161135990611d3a565b60006040518083038185875af1925050503d8060008114611396576040519150601f19603f3d011682016040523d82523d6000602084013e61139b565b606091505b5050905080156113e5577f3300bdb359cfb956935bca32e9db727413eab1ca84341f2e36caea85bb7969688785846040516113d893929190611dbb565b60405180910390a161143c565b7f52393538bc0db507386ead0507ce1c41395c6e6ac85c295a720f325179c96d51878560405161141692919061202f565b60405180910390a160008360020160016101000a81548160ff0219169083151502179055505b505b505b5050808061144d9061206b565b9150506111fd565b505050565b600080fd5b6000819050919050565b6114728161145f565b811461147d57600080fd5b50565b60008135905061148f81611469565b92915050565b600381106114a257600080fd5b50565b6000813590506114b481611495565b92915050565b600080604083850312156114d1576114d061145a565b5b60006114df85828601611480565b92505060206114f0858286016114a5565b9150509250929050565b6000602082840312156115105761150f61145a565b5b600061151e84828501611480565b91505092915050565b6002811061153457600080fd5b50565b60008135905061154681611527565b92915050565b6000806000606084860312156115655761156461145a565b5b600061157386828701611480565b935050602061158486828701611480565b925050604061159586828701611537565b9150509250925092565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006115ca8261159f565b9050919050565b6115da816115bf565b81146115e557600080fd5b50565b6000813590506115f7816115d1565b92915050565b6000602082840312156116135761161261145a565b5b6000611621848285016115e8565b91505092915050565b60008115159050919050565b61163f8161162a565b82525050565b600060208201905061165a6000830184611636565b92915050565b6116698161145f565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600381106116af576116ae61166f565b5b50565b60008190506116c08261169e565b919050565b60006116d0826116b2565b9050919050565b6116e0816116c5565b82525050565b600381106116f7576116f661166f565b5b50565b6000819050611708826116e6565b919050565b6000611718826116fa565b9050919050565b6117288161170d565b82525050565b6002811061173f5761173e61166f565b5b50565b60008190506117508261172e565b919050565b600061176082611742565b9050919050565b61177081611755565b82525050565b60006101008201905061178c600083018b611660565b611799602083018a6116d7565b6117a66040830189611660565b6117b36060830188611660565b6117c06080830187611660565b6117cd60a083018661171f565b6117da60c0830185611660565b6117e760e0830184611767565b9998505050505050505050565b6000806040838503121561180b5761180a61145a565b5b600061181985828601611480565b925050602061182a858286016115e8565b9150509250929050565b60006020820190506118496000830184611660565b92915050565b600082825260208201905092915050565b7f526f756e64206e6f742061637469766500000000000000000000000000000000600082015250565b600061189660108361184f565b91506118a182611860565b602082019050919050565b600060208201905081810360008301526118c581611889565b9050919050565b7f526f756e6420656e646564000000000000000000000000000000000000000000600082015250565b6000611902600b8361184f565b915061190d826118cc565b602082019050919050565b60006020820190508181036000830152611931816118f5565b9050919050565b7f496e76616c6964207465616d0000000000000000000000000000000000000000600082015250565b600061196e600c8361184f565b915061197982611938565b602082019050919050565b6000602082019050818103600083015261199d81611961565b9050919050565b7f42657420616d6f756e74206d7573742062652067726561746572207468616e2060008201527f3000000000000000000000000000000000000000000000000000000000000000602082015250565b6000611a0060218361184f565b9150611a0b826119a4565b604082019050919050565b60006020820190508181036000830152611a2f816119f3565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611a708261145f565b9150611a7b8361145f565b9250828201905080821115611a9357611a92611a36565b5b92915050565b611aa2816115bf565b82525050565b6000608082019050611abd6000830187611660565b611aca6020830186611a99565b611ad7604083018561171f565b611ae46060830184611660565b95945050505050565b7f526f756e64206e6f7420636f6d706c6574656400000000000000000000000000600082015250565b6000611b2360138361184f565b9150611b2e82611aed565b602082019050919050565b60006020820190508181036000830152611b5281611b16565b9050919050565b7f4e6f2062657420706c6163656400000000000000000000000000000000000000600082015250565b6000611b8f600d8361184f565b9150611b9a82611b59565b602082019050919050565b60006020820190508181036000830152611bbe81611b82565b9050919050565b7f5265776172647320616c726561647920636c61696d6564000000000000000000600082015250565b6000611bfb60178361184f565b9150611c0682611bc5565b602082019050919050565b60006020820190508181036000830152611c2a81611bee565b9050919050565b7f446964206e6f7420626574206f6e2077696e6e696e67207465616d0000000000600082015250565b6000611c67601b8361184f565b9150611c7282611c31565b602082019050919050565b60006020820190508181036000830152611c9681611c5a565b9050919050565b7f4e6f207265776172647320746f20636c61696d00000000000000000000000000600082015250565b6000611cd360138361184f565b9150611cde82611c9d565b602082019050919050565b60006020820190508181036000830152611d0281611cc6565b9050919050565b600081905092915050565b50565b6000611d24600083611d09565b9150611d2f82611d14565b600082019050919050565b6000611d4582611d17565b9150819050919050565b7f5472616e73666572206661696c65640000000000000000000000000000000000600082015250565b6000611d85600f8361184f565b9150611d9082611d4f565b602082019050919050565b60006020820190508181036000830152611db481611d78565b9050919050565b6000606082019050611dd06000830186611660565b611ddd6020830185611a99565b611dea6040830184611660565b949350505050565b7f556e617574686f72697a65640000000000000000000000000000000000000000600082015250565b6000611e28600c8361184f565b9150611e3382611df2565b602082019050919050565b60006020820190508181036000830152611e5781611e1b565b9050919050565b7f496e76616c69642077696e6e696e67207465616d000000000000000000000000600082015250565b6000611e9460148361184f565b9150611e9f82611e5e565b602082019050919050565b60006020820190508181036000830152611ec381611e87565b9050919050565b6000604082019050611edf6000830185611660565b611eec602083018461171f565b9392505050565b6000606082019050611f086000830186611660565b611f156020830185611660565b611f226040830184611767565b949350505050565b6000611f358261145f565b9150611f408361145f565b9250828202611f4e8161145f565b91508282048414831517611f6557611f64611a36565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611fa68261145f565b9150611fb18361145f565b925082611fc157611fc0611f6c565b5b828204905092915050565b6000611fd78261145f565b9150611fe28361145f565b9250828203905081811115611ffa57611ff9611a36565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006060820190506120446000830185611660565b6120516020830184611a99565b818103604083015261206281611d78565b90509392505050565b60006120768261145f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036120a8576120a7611a36565b5b60018201905091905056fea264697066735822122059aa820a39c653dfb6b7cdbfeb92ed35d762d4cf7cb01b7b2234155514bf065764736f6c63430008130033";

type RoundManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RoundManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RoundManager__factory extends ContractFactory {
  constructor(...args: RoundManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      RoundManager & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): RoundManager__factory {
    return super.connect(runner) as RoundManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RoundManagerInterface {
    return new Interface(_abi) as RoundManagerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): RoundManager {
    return new Contract(address, _abi, runner) as unknown as RoundManager;
  }
}
